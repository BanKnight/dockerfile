name: dockerfile

on:
  push:
    branches:
      - master
    paths:
      - '**/Dockerfile'
      - '**/dockerfile.yml'

jobs:
  node:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout master
      uses: actions/checkout@master
    - name: build node:latest
      uses: ilteoood/docker_buildx@master
      with:
        publish: true
        imageName:  ${{secrets.DOCKER_USERNAME}}/node
        platform: linux/amd64,linux/arm64,linux/arm/v7 # 你准备构建的镜像平台
        tag: latest
        dockerFile: ./node/latest/Dockerfile
        dockerHubUser: ${{ secrets.DOCKER_USERNAME }} # docker hub userid
        dockerHubPassword: ${{ secrets.DOCKER_PASSWORD }} # docker hub password
    - name: build node:slim
      uses: ilteoood/docker_buildx@master
      with:
        publish: true
        imageName:  ${{secrets.DOCKER_USERNAME}}/node
        platform: linux/amd64,linux/arm64,linux/arm/v7 # 你准备构建的镜像平台
        tag: slim 
        dockerFile: ./node/slim/Dockerfile
        dockerHubUser: ${{ secrets.DOCKER_USERNAME }} # docker hub userid
        dockerHubPassword: ${{ secrets.DOCKER_PASSWORD }} # docker hub password
  mongo:
      runs-on: ubuntu-latest
      steps:
      - name: Checkout master
        uses: actions/checkout@v2     
      -
        name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: latest
      -
        name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Docker login
        run: 
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }}  --password-stdin \
          
      - name: Build mongo
        run: |
          cd ./mongo/latest/
          docker buildx build \
              --platform linux/amd64,linux/arm64 \
              -t  ${{ secrets.DOCKER_USERNAME }}/mongo \
              --push .
              